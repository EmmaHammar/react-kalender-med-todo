{"version":3,"sources":["components/Tasks/GetMasterData.js","components/Header/Header.js","components/Calendar/Styles.js","components/Calendar/CalendarHeader.js","components/Calendar/SaveData.js","components/Calendar/AddTask.js","components/Tasks/UpdateCheckbox.js","components/Calendar/PrintDayList.js","components/Calendar/MyCalendar.js","components/Footer/Footer.js","components/Tasks/TaskCard.js","components/Tasks/TaskList.js","App.js","reportWebVitals.js","index.js"],"names":["GetMasterData","cb","fetch","then","response","json","data","Header","isSelected","day","value","isSame","dayStyles","isBefore","Date","beforeToday","console","log","isToday","CalendarHeader","setValue","className","onClick","clone","subtract","String","fromCharCode","format","add","SaveData","newTask","method","headers","body","JSON","stringify","res","AddTask","props","useState","title","setTitle","isUpdate","date","selectedDate","isFinish","onSubmit","evt","addTask","preventDefault","type","placeholder","onChange","target","id","UpdateCheckbox","updateTask","PrintDayList","masterArr","setMasterArr","checked","useEffect","handleClick","deleteTask","Object","values","map","task","index","_id","moment","require","MyCalendar","calendar","setCalendar","onClickDay","setOnClickDay","setSelectedDate","doUpdate","startDay","startOf","weekday","endDay","endOf","calendarArr","push","Array","fill","getLength","lengthArr","i","length","week","clickedDate","_d","clickedDateRightFormat","formatDate","Footer","TaskCard","TaskList","setChecked","isChecked","sortMasterList","sort","a","b","printMasterList","App","setDoUpdate","findIndex","obj","splice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d95d845d.chunk.js","sourcesContent":["function GetMasterData (cb) {\n\n    fetch(`http://localhost:3012/masterlist`)\n    // fetch(`https://react-kalender-med-to-do-be.herokuapp.com/masterlist`)\n\n\n    .then(response => response.json())\n    .then(data => {\n        // console.log(\"masterData to App:\", data);\n\n        //cb tillbaka till app:\n        cb(data)\n    });\n\n}\n\nexport default GetMasterData;\n","import './Header.css';\n\nfunction Header() {\n    return (\n      <header>\n        <h1>My Calendar</h1>\n      </header>\n    );\n  }\n  \n  export default Header;","//styling:\nfunction isSelected(day, value) {\n    return value.isSame(day, \"day\");\n}\n\nexport function beforeToday(day) {\n    return day.isBefore(new Date(), \"day\");\n}\n\nfunction isToday(day) {\n    return day.isSame(new Date(), \"day\");\n}\n\nexport default function dayStyles(day, value) {\n    if (beforeToday(day)) return \"before\"\n    if (isSelected(day, value)) return \"selected-day\"\n    if (isSelected(day, value)) return console.log(\"date clicked\", day);\n\n    if (isToday(day)) return \"today\"\n    return \"\"\n\n}","export default function CalendarHeader({value, setValue}) {\n\n    function currMonthName() {\n        return value.format(\"MMMM\")\n    }\n\n    function currYear() {\n        return value.format(\"YYYY\")\n    }\n    \n    function prevMonth() {\n        return value.clone().subtract(1, \"month\");\n    };\n\n    function nextMonth() {\n        return value.clone().add(1, \"month\");\n    };\n\n    // function thisMonth() {\n    //     return value.isSame(new Date(), \"month\");\n    // }\n    return(\n        <div className=\"calendar-header\">\n                <div className=\"prev\" onClick={ () => setValue(prevMonth()) }>\n                    {String.fromCharCode(171)}\n                </div>\n                    \n                <div className=\"curr\">{currYear()} {currMonthName()}</div>\n                <div className=\"next\" onClick={ () => setValue(nextMonth()) }>\n                    {String.fromCharCode(187)}\n                </div>    \n        </div>\n    )\n};\n\n\n\n//!thisMonth - kollar omd et 채r sant eller falskt. om det inte 채r denna m책nad -> visa pilen till v채nster\n\n","function SaveData(newTask) {\n    fetch(`http://localhost:3012/task`, {\n    // fetch(`https://react-kalender-med-to-do-be.herokuapp.com/task`, {\n\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    }, \n    body: JSON.stringify(newTask)\n  })\n  .then(data => data.json())\n  .then(res => {\n      console.log(\"newTask 채r sparad\", res);\n  });\n}\n\nexport default SaveData;","import { useState, useEffect } from 'react';\nimport SaveData from './SaveData';\n\nfunction AddTask(props) {\n  // {onClickDay ? <AddTask masterArr={masterArr} addTask={ props.addTask } deleteTask={props.deleteTask} doUpdate={props.doUpdate} isUpdate={props.isUpdate} selectedDate={ selectedDate } count={counter} /> : \"\"}\n\n  const [title, setTitle] = useState('');\n  const [masterArr, setMasterArr] = useState([]);\n\n  const [doUpdate, setDoUpdate] =useState(false);\n  const [isUpdate, setIsUpdate] =useState(props.isUpdate);\n\n  //state endast i denna funktion som printar text om sparat task:\n  const [saved, setSaved] = useState(false);\n \n  let newTask = { \n    date: props.selectedDate, //not object\n    title: title,\n    isFinish: false\n  };\n\n  //visa text i input:\n  const handleChange = (evt) => {\n    setTitle(evt.target.value)\n  }\n\n  //klick spara-btn:\n  const onSubmit = (evt) => {\n    props.addTask(newTask) //kallar p책 funktionen addTask() i app.js som ska spara i db \n    \n    // //uppdatera masterArr med nya statet:\n    // const masterArr = {...masterArr}\n\n    // //h채mta+채ndra statet \n    // const newMasterArr = {...masterArr, ...newTask}\n    \n    // // spara state\n    // setMasterArr(masterArr)\n    // console.log(\"masterArr i AddTask\", masterArr);\n\n\n    evt.preventDefault();\n  }\n\n\n    \n  return (\n    <div>\n      <h3>L채gg till ny uppgift med deadline: {props.selectedDate}</h3>\n      <form onSubmit={ onSubmit }>\n          <input type=\"text\" placeholder=\"Skriv ny uppgift\" value={ title } onChange={ handleChange }></input>\n          <button type=\"submit\" id=\"saveBtn\">Spara</button>\n      </form>\n      {/* {saved ? \"Du har lagt till en ny uppgift!\" : \"Du har inte lagt till\"} */}\n    </div>\n  );\n}\n  \nexport default AddTask;","function UpdateCheckbox(updateTask) {\n    fetch(`http://localhost:3012/checkbox`, {\n    // fetch(`https://react-kalender-med-to-do-be.herokuapp.com/checkbox`, {\n\n        method: 'post',\n        headers: {\n            'Content-Type': 'application/json'\n        }, \n        body: JSON.stringify(updateTask)\n        })\n    .then(data => data.json())\n    .then(res => {\n        console.log(\"res from fetch updateCheckbox():\", res);\n    });\n\n}\n\nexport default UpdateCheckbox;","// import { useState, useEffect } from 'react';\nimport { useState, useEffect } from 'react';\nimport UpdateCheckbox from '../Tasks/UpdateCheckbox';\n\nfunction PrintDayList(props) {\n\n  const [masterArr, setMasterArr] = useState([]);\n  const [checked, setChecked] = useState(false);\n\n  //s채tta listan som state i denna komp:\n  useEffect( () => {\n    setMasterArr(props.masterArr);\n  }, [])\n\n  useEffect( () => {\n    setMasterArr(props.masterArr);\n  }, [checked])\n\n  //remove() db when checked task in daylist:\n  const handleClick = ( (evt) => {\n    // console.log(\"klick checkbox daylist:\", evt.target.id);\n\n    let updateTask = { \n        id: evt.target.id,\n        isFinish: true\n    };\n\n    props.deleteTask(updateTask) //kallar p책 funktionen deleteTask() i app.js som ska spara i db + uppdat state\n\n  });\n\n  return (\n    <div>\n      <h3>Task-list f철r: {props.selectedDate}</h3>\n      <ul>\n        {\n          Object.values(masterArr).map( (task, index) => (task.date === props.selectedDate) ? <div key={index}> <input id={task._id} type=\"checkbox\" onClick={handleClick}></input><li>{task.title}</li></div> : \"\")\n        }\n      </ul>\n    </div>\n  );\n}\n  \nexport default PrintDayList;\n\n\n\n\n","import { useState, useEffect } from 'react';\nimport './MyCalendar.css';\nimport dayStyles from './Styles';\n\nimport CalendarHeader from './CalendarHeader';\nimport AddTask from './AddTask';\nimport PrintDayList from './PrintDayList';\nconst moment = require('moment');\n\nfunction MyCalendar(props) {\n\n    // <MyCalendar masterArr={masterArr} - s채tts som state + skickas vidare\n    //addTask={ addTask } deleteTask={deleteTask} - skickas vidare \n    //doUpdate={doUpdate} isUpdate={isFinish} /> - s채tts som state\n    const [calendar, setCalendar] = useState([]);\n    const [value, setValue] = useState(moment());\n    const [onClickDay, setOnClickDay] = useState(false)\n    const [selectedDate, setSelectedDate] = useState('');\n\n    const [masterArr, setMasterArr] = useState(props.masterArr); \n    const [doUpdate, setDoUpdate] = useState(props.doUpdate);\n    const [isUpdate, setUpdate] = useState(props.isUpdate);\n\n    // const [deadlineArr, setDeadlineArr] = useState([])\n\n    useEffect( () => {\n        console.log(\"masterArr i MyCalendar:\", props.masterArr); //DETTA LOGGAS 2 GGR\n        // setMasterArr(Array.from(props.masterArr)); //annars f책r error att getMasterArr.map() is not a function l채ngre ner\n        setMasterArr(props.masterArr);\n    }, [props.masterArr]);\n\n    const startDay = value.clone().startOf(\"month\").startOf(\"week\").weekday(1);\n    const endDay = value.clone().endOf(\"month\").endOf(\"week\");\n\n    useEffect( () => {\n\n        const day = startDay.clone().subtract(1, \"day\")\n        //vill ej s채tta state i varje loop -> tempor채r variabel:\n        const calendarArr = [];\n\n        //whileloopen utf철rs s책 l채nge endDay inte 채r uppfyllt, intervallet ska vara day:\n        while(day.isBefore(endDay, \"day\")) {\n\n            //skjuta in i tomma arrayen. 7-dagar p책 en vecka. fill(0) f철r att ha n책got att map() 철ver:\n            calendarArr.push(\n                Array(7)\n                .fill(0)\n                .map( () => day.add(1, \"day\").clone())\n            )\n        };\n        //update the state with the matrix when while-loop is finish:\n        setCalendar(calendarArr)\n    }, [value]); //FIXA?? React Hook useEffect has missing dependencies: 'endDay' and 'startDay'. Either include them or remove the dependency array  react-hooks/exhaustive-deps\n\n    function formatDate(day) {\n        const clickedDate = day._d;\n        const clickedDateRightFormat = moment(clickedDate).format(\"YYYY-MM-DD\");\n        setSelectedDate(clickedDateRightFormat);\n    };\n\n    useEffect( () => {    \n        // console.log(\"useeffect onclickday:\", onClickDay);\n        // console.log(\"printa tasks f철r:\", selectedDate);\n\n    }, [onClickDay, selectedDate]);\n\n\n    const getLength = (day, task) => {\n        let lengthArr = [];\n\n        for (let i in masterArr) {\n            if( masterArr[i].date === (moment(day).format(\"YYYY-MM-DD\")) && masterArr[i].isFinish === false) {\n                lengthArr.push(masterArr[i].title)\n            }\n        }\n\n        return (\n            <div>\n                {lengthArr.length} deadlines\n            </div>\n        )\n\n    }\n\n\n    return(\n        <div className=\"calendar\">\n\n            <CalendarHeader value={value} setValue={setValue} />\n            \n            {/* denna div ska renderas om om checkbox har 채ndrats? */}\n            <div className=\"calendar-body\">\n                { \n                    calendar.map((week, index) => \n                        <div key={index}>\n                            {\n                                week.map((day, index) => \n                                    <div className=\"day\" \n                                        key={index} \n                                        onClick=\n                                            { \n                                                function clickedDay() { \n                                                    setValue(day); \n                                                    formatDate(day);\n                                                    setOnClickDay(true);\n                                                }\n                                            } >\n                                    <div className={ dayStyles(day, value) }>\n                                        { day.format(\"D\") }\n\n                                        {/*FIXA s책 att den adderas:*/}\n                                        {/* {\n\n                                        Object.values(masterArr).map( (task, index) => (moment(day).format(\"YYYY-MM-DD\") === task.date) && <div key={index}>{(task.title.length > 0) && task.title.length} deadline(s)</div>)\n                                                \n                                        } */}\n                                        <ul className=\"taskListInCalendar\">\n                                        {\n                                        // Object.values(masterArr).map( (task, index) => (moment(day).format(\"YYYY-MM-DD\") === task.date) ? <li className=\"itemInTaskListInCalendar\" key={index} >{task.title}</li> : \"\")\n                                        }\n                                        </ul>\n\n                                        {\n                                        // Object.values(masterArr).map( (task, index) => (moment(day).format(\"YYYY-MM-DD\") === task.date) ? getLength(day, task) : \"\")\n                                        getLength(day) \n                                        // Object.values(masterArr).map( (task, index) => (day._d === task.date) ? getLength(day, task) : \"\")\n\n                                        }\n\n                                    </div>\n                                    \n                                </div>)\n                            }\n                        </div>)\n                }\n            </div> \n\n            {onClickDay ? <AddTask masterArr={masterArr} addTask={ props.addTask } deleteTask={props.deleteTask} doUpdate={props.doUpdate} isUpdate={props.isUpdate} selectedDate={ selectedDate }/> : \"\"}\n\n            {onClickDay ? <PrintDayList masterArr={ masterArr} selectedDate={ selectedDate } deleteTask={props.deleteTask} doUpdate={props.doUpdate} isUpdate={props.isUpdate} /> : \"\"}\n            \n        </div>\n    )\n}\n\nexport default MyCalendar;\n\n//arrowfunktion i onClick s책 det event endast k철rs n채r det klickas, o inte n채r komponenten renders??                          \n\n            {/* <MyCalendar masterArr={masterArr} - s채tts som state + skickas vidare\n            addTask={ addTask } deleteTask={deleteTask} - skickas vidare \n            doUpdate={doUpdate} isUpdate={isFinish} /> - s채tts som state */}","import './Footer.css'\n\nfunction Footer() {\n    return (\n      <footer id=\"footer\">\n        <h4>2021</h4>\n      </footer>\n    );\n  }\n  \n  export default Footer;","import {useState, useEffect} from 'react';\nimport './TaskCard.css';\nimport UpdateCheckbox from './UpdateCheckbox';\n\nfunction TaskCard (props, index) {\n    \n\n    const [masterArr, setMasterArr] = useState([]);\n\n    const [checked, setChecked] = useState(false);\n\n    const [doUpdate, setDoUpdate] = useState(false);\n    const [isFinish, setIsFinish] = useState(props.isFinish);\n\n  \n    useEffect( () => {\n        // console.log(\"TaskList - props.masterArr\", props.masterArr);\n        setMasterArr(props.masterArr)\n        // console.log(\"TaskList - state masterArr\", masterArr);\n    }, [])\n\n    //remove() db when checked task in masterTasklist -> trickle up and down to printDaylist:  \n    const handleClick = ( (evt) => {\n        // console.log(\"klick checkbox TaskCard:\", evt.target.id);\n\n        //UPPDATERA DB \n        let updateTask = { \n            id: evt.target.id,\n            isFinish: true\n        };\n\n        // console.log(\"updateTask i TaskCard\", updateTask);\n        props.deleteTask(updateTask) //kallar p책 funktionen deleteTask() i app.js \n\n    })\n    \n    return (\n            <div className=\"task-card\" key={ props.index }>\n                \n                <input id={ props.id } type=\"checkbox\" onClick={handleClick}></input>\n                <h3>{ props.title }</h3>\n                <p>{ props.date }</p>\n            </div>\n    );\n};\n\nexport default TaskCard;","import './TaskList.css';\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport TaskCard from \"./TaskCard\";\n\nfunction TaskList(props) {\n\n    // <TaskList masterArr={masterArr} addTask={ addTask } deleteTask={deleteTask} doUpdate={doUpdate} isUpdate={isFinish}/> \n\n    const [masterArr, setMasterArr] = useState([]);\n    const [checked, setChecked] = useState(false);\n  \n    //s채tta listan som state i denna komp, f철rsta g책ngen denna komp k철rs har GetMasterData() inte hunnit k철ras o s채tta statet masterArr -> beh철ver k철ra useEffect n채r props.masterArr 채ndras:\n    useEffect( () => {\n        // console.log(\"TaskList - props.masterArr\", props.masterArr);\n        setMasterArr(props.masterArr)\n        // console.log(\"TaskList - state masterArr\", masterArr);\n    }, [props.masterArr])\n\n    const isChecked = () => {\n        setChecked(true); //f철rs철ka rendera om TaskCard\n        \n      } \n\n    const sortMasterList = props.masterArr.sort( (a,b) => a.date > b.date ? 1: -1)\n    const printMasterList = Object.values(sortMasterList).map( (task, index ) => {\n\n        return (\n                <TaskCard \n                    isFinish={ task.isFinish }\n                    title={ task.title }\n                    date={ moment(task.date).format(\"YYYY/MM/DD\") }\n                    key={ index }\n                    index={index}\n                    id={ task._id }\n                    deleteTask={ props.deleteTask }\n                    masterArr={ props.masterArr } //skillnad ? masterArr={ props.masterArr }\n                    doUpdate={props.doUpdate} \n                    isUpdate={props.isUpdate}\n                    checked={checked}\n                    isChecked={isChecked}\n                />\n        )\n    })\n    \n    return (\n        <div id=\"task-list\">\n            <h2>Master task-list</h2>\n            { printMasterList }\n        </div>\n    )\n};\n\nexport default TaskList;","import { useState, useEffect } from 'react';\n\nimport GetMasterData from './components/Tasks/GetMasterData';\nimport Header from './components/Header/Header';\nimport MyCalendar from './components/Calendar/MyCalendar';\nimport Footer from './components/Footer/Footer';\nimport SaveData from './components/Calendar/SaveData';\nimport UpdateCheckbox from './components/Tasks/UpdateCheckbox';\n\nimport TaskList from './components/Tasks/TaskList';\n\n\nfunction App() {\n\n  //STATES\n  const [masterArr, setMasterArr] = useState([]); //db-data\n  const [doUpdate, setDoUpdate] = useState(false); //togglas full철sning omrendering setDoUpdate(!doUpdate);\n  const [isFinish, setFinish] = useState(false); //? om checkbox 채r checked?\n  const [isUpdate, setisUpdate] = useState(false); // vad g철r denna?\n\n  const [isTaskUpdate, setisTaskUpdate] = useState(false);\n\n  const [newArray, setNewArr] = useState(false); \n\n  useEffect( () => {\n    GetMasterData( (data) => {\n      console.log(\"GetMasterData() till App:\", data); //denna g철rs 1 g책ng=R채tt\n      setMasterArr(data);\n    })\n  }, []) \n  // }, [masterArr]) \n\n\n  //spara ny task i db (children kallar p책 den):\n  const addTask = (newTask) => {\n    SaveData(newTask); //spara i db\n\n\n    //FEL!! nya tasken finns inte med i datan s책 jag kan uppdatera setMasterArr..\n    // GetMasterData( (data) => {\n    //   console.log(\"Finns nya tasken med i masterArr?\", data); \n    //   setMasterArr(data);\n    // })\n\n    // uppdatera masterArr med nya statet:\n    const masterArr = {...masterArr} //denna g철r att sidan omrenderas lokalt - beh철vs inte de andra d책? f철r om jag \n\n    //h채mta+채ndra statet \n    const newMasterArr = {...masterArr, ...newTask}\n    // console.log(\"TS ...masterArr\", ...masterArr);\n    // console.log(\"TS newMasterArr\", newMasterArr);\n    // console.log(\"TS masterArr\", masterArr);\n    \n    // spara state\n    setMasterArr(masterArr)\n    // console.log(\"masterArr efter newTask tillagd???\", masterArr);\n\n\n\n  } \n  \n  //ta bort checkad task i db (children kallar p책 den):\n  const deleteTask = (task) => {\n    UpdateCheckbox(task); //tar bort fr책n db\n            //채ndra - hitta index o splice\n            const findIndex = masterArr.findIndex(obj => obj._id === task.id)\n            // console.log(\"findIndex\", findIndex);\n    \n            const taskToRemove = masterArr.splice(findIndex, 1);\n            // console.log(\"taskToRemove\", taskToRemove);\n            // console.log(\"masterArr efter splice:\", masterArr);\n    \n            setMasterArr(masterArr);\n            setDoUpdate(!doUpdate)\n    \n  } \n\n\n  return (\n    <>\n      <Header />\n\n      <MyCalendar masterArr={masterArr} addTask={ addTask } deleteTask={deleteTask} doUpdate={doUpdate} isUpdate={isFinish} />\n\n      <TaskList masterArr={masterArr} addTask={ addTask } deleteTask={deleteTask} doUpdate={doUpdate} isUpdate={isFinish}/> \n\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n\n//vill uppdatera isAdded fr책n AddTask > MyCalendar > App => TaskList omrenderas o ny task syns i listan\n\n//======\n//PROPS\n//======\n\n// STATES:\n// masterArr = [] inneh책ller db-data\n// isUpdate = false, ???\n// isFinish = false, ???\n// doUpdate = false, full철sning\n\n//FUNKTIONER som child ska k철ra:\n//addTask = l채gga till ny task till db\n//deleteTask = ta bort task fr책n db n채r checkbox klickats\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}